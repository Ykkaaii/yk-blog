(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{573:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("几乎所有语言的最基础的功能之一，就是在变量中存储值，并且在稍后取出或修改这些值。")]),t._v(" "),a("p",[t._v("在变量中存储值和取出值的能力，给程序赋予了状态。这就引伸出两个问题：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("这些变量被存储在哪里")])]),t._v(" "),a("li",[a("strong",[t._v("程序如何在需要的时候找到它们")]),t._v("？")])]),t._v(" "),a("p",[t._v("回答这些问题需要一组明确定义的规则，它定义了如何存储变量，以及如何找到这些变量。我们称这组规则为："),a("strong",[t._v("作用域")])])]),a("h2",{attrs:{id:"运行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行过程"}},[t._v("#")]),t._v(" 运行过程")]),t._v(" "),a("p",[t._v("在了解"),a("code",[t._v("javascript")]),t._v("中的作用域之前，我想应该先了解一下"),a("code",[t._v("javascript")]),t._v("的运行过程，这对于作用域的理解有所帮助。")]),t._v(" "),a("h3",{attrs:{id:"编译"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[t._v("#")]),t._v(" 编译")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("javascript")]),t._v("中，一段源码在被执行之前大概会经历以下三个步骤，这也被称之为"),a("strong",[t._v("编译")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("分词/词法分析")]),t._v("：编译器会先将一连串字符打断成（对于语言来说）有意义的片段，称为"),a("code",[t._v("token")]),t._v("（记号），例如"),a("code",[t._v("var a = 2;")]),t._v("。这段程序很可能会被打断成如下token："),a("code",[t._v("var")]),t._v("，"),a("code",[t._v("a")]),t._v("，"),a("code",[t._v("=")]),t._v("，"),a("code",[t._v("2")]),t._v("，"),a("code",[t._v(";")]),t._v("。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("解析/语法分析")]),t._v("：编译器将一个"),a("code",[t._v("token")]),t._v("的流（数组）转换为一个“抽象语法树”（"),a("code",[t._v("AST —— Abstract Syntax Tree")]),t._v("），它表示了程序的语法结构。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("代码生成")]),t._v("：编译器将上一步中生成的抽象语法树转换为机器指令，等待引擎执行。")])])]),t._v(" "),a("h3",{attrs:{id:"执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行"}},[t._v("#")]),t._v(" 执行")]),t._v(" "),a("p",[t._v("编译器一顿操作猛如虎，生成了一堆机器指令，JS引擎开心地拿到这堆指令，开始执行，这个时候我们要说的"),a("code",[t._v("LHS")]),t._v("和"),a("code",[t._v("RHS")]),t._v("就登场了。")]),t._v(" "),a("p",[a("code",[t._v("LHS(Left-hand Side)")]),t._v("和"),a("code",[t._v("RHS(Right-hand Side)")]),t._v("，是在代码执行阶段JS引擎操作变量的两种方式，二者区别就是对变量的查询目的是"),a("strong",[t._v("变量赋值")]),t._v("还是"),a("strong",[t._v("查询")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("LHS")]),t._v("可以理解为"),a("strong",[t._v("变量在赋值操作符(=)的左侧")]),t._v("，例如"),a("code",[t._v("a = 1")]),t._v("，当前引擎对变量"),a("code",[t._v("a")]),t._v("查找的目的是"),a("strong",[t._v("变量赋值")]),t._v("。这种情况下，引擎不关心变量"),a("code",[t._v("a")]),t._v("原始值是什么，只管将值"),a("code",[t._v("1")]),t._v(" 赋给"),a("code",[t._v("a")]),t._v("变量。\n"),a("code",[t._v("LHS")]),t._v("意味着"),a("strong",[t._v("变量赋值或写入内存")]),t._v("，,他强调是写入这个动作，所以"),a("code",[t._v("LHS")]),t._v("查询的是这个变量对应的内存地址。")]),t._v(" "),a("p",[a("code",[t._v("RHS")]),t._v("可以理解为"),a("strong",[t._v("变量在赋值操作符(=)的右侧")]),t._v("，例如："),a("code",[t._v("console.log(a)")]),t._v("，其中引擎对变量"),a("code",[t._v("a")]),t._v("的查找目的就是"),a("strong",[t._v("查询")]),t._v("，它需要找到变量"),a("code",[t._v("a")]),t._v("对应的实际值是什么，然后才能将它打印出来。\n当变量出现在赋值操作右侧或没有赋值操作时，是"),a("code",[t._v("RHS")]),t._v("。\n"),a("code",[t._v("RHS")]),t._v("意味着"),a("strong",[t._v("变量查找或读取内存")]),t._v("，它强调的是读这个动作，查询的是变量的内容。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// LHS 查询")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RHS 查询")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RHS 查询")]),t._v("\n\n")])])]),a("p",[t._v("为了执行"),a("code",[t._v("func(2)")]),t._v("，JS 引擎既做了LHS查询又做了RHS查询，只不过这里的LHS比较难发现。")]),t._v(" "),a("p",[t._v("总之，引擎想对变量进行获取/赋值，就离不开"),a("code",[t._v("LHS")]),t._v("和"),a("code",[t._v("RHS")]),t._v("，然而这两个操作只是手段，到哪里去获取变量才是关键。"),a("code",[t._v("LHS")]),t._v("和"),a("code",[t._v("RHS")]),t._v("获取变量的位置就是"),a("strong",[t._v("作用域")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"什么是作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是作用域"}},[t._v("#")]),t._v(" 什么是作用域")]),t._v(" "),a("p",[t._v("简单来说，"),a("strong",[t._v("作用域")]),t._v("指程序中定义变量的区域，它决定了代码区块中变量和其他资源的"),a("strong",[t._v("可见性")]),t._v("(访问权限)。")]),t._v(" "),a("p",[a("code",[t._v("javascript")]),t._v("有三种作用域类型：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("全局作用域")]),t._v("：全局作用域为程序的最外层作用域，在代码中任何地方都能访问。")]),t._v(" "),a("li",[a("strong",[t._v("函数作用域")]),t._v("：函数作用域只有函数被定义时才会创建，包含在父级函数作用域/全局作用域内。")]),t._v(" "),a("li",[a("strong",[t._v("块级作用域")]),t._v("：块级作用域可通过新增命令let和const声明，所声明的变量在指定块的作用域外无法被访问。")])]),t._v(" "),a("h3",{attrs:{id:"全局作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局作用域"}},[t._v("#")]),t._v(" 全局作用域")]),t._v(" "),a("p",[t._v("全局作用域为程序的最外层作用域是一直存在的，在代码中任何地方都能访问到的对象拥有全局作用域。")]),t._v(" "),a("p",[t._v("一般来说以下几种情形拥有全局作用域：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("window对象的属性、方法")])]),t._v(" "),a("li",[a("strong",[t._v("定义在最外层的变量、函数、对象")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最外层变量")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最外层函数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 内层函数")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: b is not defined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught ReferenceError: func2 is not defined")]),t._v("\n")])])]),a("p",[t._v("在此例中，变量"),a("code",[t._v("a")]),t._v("和函数"),a("code",[t._v("func1")]),t._v("拥有全局作用域，在任何地方都能访问到。")]),t._v(" "),a("p",[t._v("但变量"),a("code",[t._v("b")]),t._v("和函数"),a("code",[t._v("func2")]),t._v("没有定义在全局作用域中，在全局作用域中无法访问。")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[t._v("未定义直接赋值的变量")]),t._v("：")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最外层函数")]),t._v("\n  a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 最外层函数")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: b is not defined")]),t._v("\n")])])]),a("p",[t._v("以上代码中，变量"),a("code",[t._v("a")]),t._v("在函数"),a("code",[t._v("func1")]),t._v("中没有定义直接被赋值，那么变量"),a("code",[t._v("a")]),t._v("会自动挂到"),a("code",[t._v("window")]),t._v("对象上，等同"),a("strong",[t._v("情形1")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("事实上，情形2:定义在最外层的变量、函数、对象相当于将定义的变量、函数、对象挂载到"),a("code",[t._v("window")]),t._v("对象上\n"),a("code",[t._v("Window")]),t._v("对象表示一个浏览器窗口或一个框架。在"),a("code",[t._v("JavaScript")]),t._v("中，"),a("code",[t._v("Window")]),t._v("对象是全局对象，可以在全局作用域中直接使用。")])]),a("p",[t._v("全局作用域有个弊端：如果我们写了很多行代码，变量定义都没有用函数（或者块）包括，那么它们就全部都在全局作用域中。这样就会污染全局命名空间, 容易引起命名冲突。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 张三写的代码中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 李四写的代码中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undifind 张三???")]),t._v("\n\n")])])]),a("p",[t._v("通常，为了避免变量污染的情况，我们将变量用函数包起来，放在函数里面的所有变量，都不会被外泄和暴露，不会污染到外面，不会对其他"),a("code",[t._v("JS")]),t._v("脚本造成影响。"),a("strong",[t._v("这是函数作用域的一个体现")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"函数作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数作用域"}},[t._v("#")]),t._v(" 函数作用域")]),t._v(" "),a("p",[t._v("函数作用域指在函数内部的变量，只能在该函数内部被访问，在函数外部无法访问。")]),t._v(" "),a("p",[t._v("函数作用域只有函数被定义时才会创建，包含在父级函数作用域 / 全局作用域内。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"吴彦祖"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("innerSay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("innerSay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: name is not defined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("innerSay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: innerSay is not defined")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"块级作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#块级作用域"}},[t._v("#")]),t._v(" 块级作用域")]),t._v(" "),a("p",[t._v("我们知道了函数可以创建函数作用域，我们可以将这个函数看作是一个"),a("strong",[t._v("独立的执行代码块")]),t._v("。使函数内部的变量只能在该函数内部被访问，在函数外部无法访问。\n那么类似函数的块语句，如"),a("code",[t._v("if")]),t._v("和"),a("code",[t._v("switch")]),t._v("条件语句或"),a("code",[t._v("for")]),t._v("和"),a("code",[t._v("while")]),t._v("循环语句能不能创建属于自己的作用域（"),a("strong",[t._v("块作用域")]),t._v("）呢？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hammad'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'Hammad'")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 18")]),t._v("\n")])])]),a("p",[a("strong",[t._v("遗憾的是，"),a("code",[t._v("JS")]),t._v("在"),a("code",[t._v("ES6")]),t._v("之前并没有块的概念")]),t._v("。")]),t._v(" "),a("p",[t._v("从上面的代码可以看出这些块语句并不会创建一个新的作用域，因为从表现上看定义在块内部的变量是能被外部访问的。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do something")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n\n")])])]),a("p",[t._v("上面的代码中，定义了"),a("code",[t._v("index")]),t._v("变量进行循环，循环之后重新"),a("code",[t._v("index")]),t._v("变量进行其他的操作，可以确定的是，在这两段代码里的"),a("code",[t._v("index")]),t._v("变量是两个不同含义/作用的变量，但是由于没有块作用域，在这段代码中，"),a("code",[t._v("index")]),t._v("变量不会因为离开了循环就失效，他的值仍是"),a("code",[t._v("3")]),t._v("。")]),t._v(" "),a("p",[t._v("为了避免这种情况，让变量的生命周期更加可控，"),a("strong",[a("code",[t._v("ES6")]),t._v("引入了块级作用域")])]),t._v(" "),a("p",[t._v("通过新增命令"),a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("声明，所声明的变量在指定块(由"),a("code",[t._v("{}")]),t._v("包裹的代码块)的作用域外无法被访问")]),t._v(" "),a("p",[t._v("改变上面的代码，将"),a("code",[t._v("var")]),t._v("声明改为"),a("code",[t._v("let")]),t._v("声明：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" index "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'innerFor'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0 'innerFor'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 'innerFor'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 'innerFor'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n\n")])])]),a("p",[t._v("我们可以看到代码按照我们期望的运行了！")]),t._v(" "),a("p",[a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("声明有有以下几个特点：")]),t._v(" "),a("ul",[a("li",[t._v("不存在变量提升")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var 的情况")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出undefined")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" foo "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let 的情况")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 报错ReferenceError")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" bar "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("上面代码中，变量"),a("code",[t._v("foo")]),t._v("用"),a("code",[t._v("var")]),t._v("命令声明，会发生变量提升，即脚本开始运行时，变量"),a("code",[t._v("foo")]),t._v("已经存在了，但是没有值，所以会输出"),a("code",[t._v("undefined")]),t._v("。")]),t._v(" "),a("p",[t._v("变量"),a("code",[t._v("bar")]),t._v("用"),a("code",[t._v("let")]),t._v("命令声明，不会发生变量提升。这表示在声明它之前，变量"),a("code",[t._v("bar")]),t._v("是不存在的，这时如果用到它，就会抛出一个错误。")]),t._v(" "),a("p",[t._v("而在代码块内，"),a("strong",[t._v("使用"),a("code",[t._v("let")]),t._v("命令声明变量之前，该变量都是不可用的")]),t._v("。这在语法上，称为“"),a("strong",[t._v("暂时性死区")]),t._v("”")]),t._v(" "),a("blockquote",[a("p",[t._v("关于变量提升，后续再仔细研究")])]),t._v(" "),a("ul",[a("li",[t._v("不允许重复声明")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" me "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'吴彦祖'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" me "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'金城武'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Uncaught SyntaxError: Identifier 'me' has already been declared")]),t._v("\n")])])]),a("p",[t._v("在上面的代码中， "),a("code",[t._v("me")]),t._v("变量被声明了两次：一次使用"),a("code",[t._v("var")]),t._v("，另一次使用"),a("code",[t._v("let")]),t._v("。因为"),a("code",[t._v("let")]),t._v("不能在同一作用域内重复声明一个已有标识符，此处的"),a("code",[t._v("let")]),t._v("声明就会抛出错误。但如果在嵌套的作用域内使用"),a("code",[t._v("let")]),t._v("声明一个同名的新变量，则不会抛出错误。")]),t._v(" "),a("blockquote",[a("p",[t._v("关于"),a("code",[t._v("let")]),t._v("和"),a("code",[t._v("const")]),t._v("的更多细节，进入 "),a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/let",target:"_blank",rel:"noopener noreferrer"}},[t._v("ES6中let与const声明"),a("OutboundLink")],1)])]),t._v(" "),a("h3",{attrs:{id:"作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[t._v("#")]),t._v(" 作用域链")]),t._v(" "),a("p",[t._v("在上面所有的代码示范中，可执行代码块总能够在自己的作用域中找到变量的，那么如果在自己的作用域中找不到目标变量，程序能否正常运行？")]),t._v(" "),a("p",[t._v("来看下面的代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("c")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2 4 12")]),t._v("\n")])])]),a("p",[t._v("上面的代码中，函数"),a("code",[t._v("bar")]),t._v("要得到"),a("code",[t._v("a")]),t._v("变量，但是在当前的函数作用域中没有定义"),a("code",[t._v("a")]),t._v("，那么"),a("code",[t._v("a")]),t._v("变量称之为"),a("strong",[t._v("自由变量")]),t._v("，"),a("code",[t._v("a")]),t._v("变量的值就需要在当前作用域的父级作用域找到定义")]),t._v(" "),a("p",[t._v("当可执行代码内部访问变量时，会先查找本作用域有无定义，如果找到目标变量即返回，如果没有找到就会到他的父级作用域中查找，如果父级也没找到定义就会接着一层一层的向上寻找。直到找到全局作用域还是没找到的话，就结束寻找，认定为变量未定义。")]),t._v(" "),a("p",[a("strong",[t._v("这种一层一层的作用域嵌套关系，就是作用域链")]),t._v("。")]),t._v(" "),a("p",[t._v("为什么强调的是找到"),a("strong",[t._v("定义")]),t._v("，观察如下代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'吴彦祖'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'金城武'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("show")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 吴彦祖 而不是 金城武")]),t._v("\n")])])]),a("p",[t._v("在fn函数中，取自由变量name的值时，"),a("strong",[t._v("要到定义fn函数的那个作用域中取，无论fn函数将在哪里调用")]),t._v("。")]),t._v(" "),a("p",[t._v('这就是所谓的"'),a("strong",[t._v("静态作用域")]),t._v('"')]),t._v(" "),a("h3",{attrs:{id:"静态作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态作用域"}},[t._v("#")]),t._v(" 静态作用域")]),t._v(" "),a("p",[t._v("静态作用域就是"),a("strong",[t._v("词法作用域")]),t._v("，与之相对的还有动态作用域。这是两种作用域模型分类\n**词法作用域（Lexical Scopes）**是"),a("code",[t._v("javascript")]),t._v("中使用的词法作用域模型。")]),t._v(" "),a("ul",[a("li",[t._v("词法作用域：也称静态作用域，是最为普遍的一种作用域模型")]),t._v(" "),a("li",[t._v("动态作用域：相对“冷门”，bash脚本、Perl等语言采纳的是动态作用域")])]),t._v(" "),a("h4",{attrs:{id:"什么是词法作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是词法作用域"}},[t._v("#")]),t._v(" 什么是词法作用域")]),t._v(" "),a("p",[t._v("词法作用域"),a("strong",[t._v("即在词法分析时生成的作用域")]),t._v("，词法分析阶段，也可以理解为"),a("strong",[t._v("代码书写阶段")]),t._v("，当你把函数（块级作用域同理）书写到某个位置，不用执行，它的作用域就已经确定了，"),a("strong",[t._v("而后无论函数将在哪里执行，他的作用域都是固定的")])]),t._v(" "),a("p",[t._v("看下面这段代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10")]),t._v("\n\n")])])]),a("p",[t._v("这段代码经历了这样的执行过程：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("f2")]),t._v("函数调用，"),a("code",[t._v("f1")]),t._v("函数调用")]),t._v(" "),a("li",[t._v("在"),a("code",[t._v("f1")]),t._v("函数作用域内查找是否有局部变量"),a("code",[t._v("num")])]),t._v(" "),a("li",[t._v("发现没找到，于是根据"),a("strong",[t._v("书写位置")]),t._v("，向上一层作用域（全局作用域）查找，发现"),a("code",[t._v("num = 10")]),t._v("，打印"),a("code",[t._v("10")])])]),t._v(" "),a("h2",{attrs:{id:"作用域与执行上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域与执行上下文"}},[t._v("#")]),t._v(" 作用域与执行上下文")]),t._v(" "),a("p",[t._v("我们知道"),a("code",[t._v("JavaScript")]),t._v("属于解释型语言，"),a("code",[t._v("JavaScript")]),t._v("的运行过程分为：解释和执行两个阶段，这两个阶段所做的事并不一样：")]),t._v(" "),a("ul",[a("li",[t._v("解释阶段：\n"),a("ul",[a("li",[t._v("词法分析")]),t._v(" "),a("li",[t._v("语法分析")]),t._v(" "),a("li",[t._v("作用域规则确定")])])]),t._v(" "),a("li",[t._v("执行阶段：\n"),a("ul",[a("li",[t._v("创建执行上下文")]),t._v(" "),a("li",[t._v("执行函数代码")]),t._v(" "),a("li",[t._v("垃圾回收")])])])]),t._v(" "),a("p",[a("code",[t._v("JavaScript")]),a("strong",[t._v("解释阶段便会确定作用域规则")]),t._v("，因此作用域在函数定义时就已经确定了，而不是在函数调用时确定，但是"),a("strong",[t._v("执行上下文是函数执行之前创建的。执行上下文最明显的就是"),a("code",[t._v("this")]),t._v("的指向是执行时确定的")]),t._v("。而作用域访问的变量是编写代码的结构确定的。")]),t._v(" "),a("p",[t._v("作用域和执行上下文之间最大的区别是： "),a("strong",[t._v("执行上下文在运行时确定，随时可能改变；作用域在定义时就确定，并且不会改变")]),t._v("。")]),t._v(" "),a("p",[t._v("一个作用域下可能包含若干个上下文环境。有可能从来没有过上下文环境（函数从来就没有被调用过）；有可能有过，现在函数被调用完毕后，上下文环境被销毁了；有可能同时存在一个或多个（闭包）。同一个作用域下，不同的调用会产生不同的执行上下文环境，继而产生不同的变量的值。")]),t._v(" "),a("h2",{attrs:{id:"参考文章和书籍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章和书籍"}},[t._v("#")]),t._v(" 参考文章和书籍")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://book.douban.com/subject/26351021/",target:"_blank",rel:"noopener noreferrer"}},[t._v("你不知道的JavaScript（上卷）"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844903797135769614#heading-12",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解JavaScript作用域和作用域链"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/7069578126979760158#heading-9",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解JS中的词法作用域与作用域链"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844904165672484871#heading-5",target:"_blank",rel:"noopener noreferrer"}},[t._v("面试官：说说作用域和闭包吧"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECMAScript 6 入门"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);
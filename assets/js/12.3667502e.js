(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{575:function(v,_,a){"use strict";a.r(_);var t=a(17),r=Object(t.a)({},(function(){var v=this,_=v.$createElement,a=v._self._c||_;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[v._v("#")]),v._v(" 前言")]),v._v(" "),a("p",[v._v("这几天开始阅读"),a("code",[v._v("《你不知道的JS（上）》")]),v._v("时，开篇的一个结论：")]),v._v(" "),a("blockquote",[a("p",[v._v("虽然"),a("code",[v._v("javascript")]),v._v("被认为是一门解释型语言/动态语言，但是它其实是一种编译型的语言")])]),v._v(" "),a("p",[v._v("作者认为"),a("code",[v._v("javascript")]),v._v("实际上是一门"),a("strong",[v._v("编译型")]),v._v("的语言，而我清晰的记得刚接触"),a("code",[v._v("javascript")]),v._v("是给的定义是："),a("code",[v._v("javascript")]),v._v("是一门"),a("strong",[v._v("解释型")]),v._v("的语言,\n这个偏差引发了我的思考：")]),v._v(" "),a("p",[a("strong",[a("code",[v._v("javascript")]),v._v("到底是解释型语言还是编译型语言？？？")])]),v._v(" "),a("p",[v._v("在思考这个问题之前，先来了解下什么是编译型语言，什么是编译型语言，两种类型的语言又有什么区别")]),v._v(" "),a("h2",{attrs:{id:"为什么有这种分类方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么有这种分类方式"}},[v._v("#")]),v._v(" 为什么有这种分类方式")]),v._v(" "),a("p",[v._v("首先我们要知道的是，"),a("strong",[v._v("计算机不能直接理解高级语言，只能直接理解机器语言")]),v._v("，所以必须要把高级语言翻译成机器语言，计算机才能执行高级语言编写的程序。")]),v._v(" "),a("p",[v._v("而我们就可以通过翻译方式的不同，区分不同的编程语言")]),v._v(" "),a("h2",{attrs:{id:"编译型语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译型语言"}},[v._v("#")]),v._v(" 编译型语言")]),v._v(" "),a("p",[v._v("编译型语言指在"),a("strong",[v._v("运行程序之前")]),v._v("，需要一个专门的编译过程，把程序编译成为机器语言的文件，而后真正运行的是编译出来的文件")]),v._v(" "),a("p",[v._v("用一个生活上的例子比喻一下：一个不会英语的人要和英国人开会，先找了翻译机构把资料翻译成英文版")]),v._v(" "),a("h2",{attrs:{id:"解释型语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解释型语言"}},[v._v("#")]),v._v(" 解释型语言")]),v._v(" "),a("p",[v._v("编译型语言指在运行程序之前不需要编译，只在程序运行时进行翻译")]),v._v(" "),a("p",[v._v("用上面的例子转换一下：这个不会英语的人带了个专门的翻译去和英国人开会")]),v._v(" "),a("h2",{attrs:{id:"编译型语言vs解释型语言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译型语言vs解释型语言"}},[v._v("#")]),v._v(" 编译型语言VS解释型语言")]),v._v(" "),a("p",[v._v("从上面的定义可以总结出两种翻译方式只是翻译的时机、翻译次数不同，")]),v._v(" "),a("p",[v._v("编译型语言在运行前就已经编译出可以被计算机理解的机器语言，而解释型语言是在运行时逐句翻译成机器语言的，\n编译型语言运行的是编译出来的机器语言，有中间代码的形成，而解释型语言没有。")]),v._v(" "),a("p",[v._v("由此我们可以从两个方面来思考编译型和解释型有何异同：")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("运行效率：")]),v._v(" "),a("p",[v._v("编译型语言在运行前已经编译完成，解释型语言每次运行都需要翻译，一般情况下")]),v._v(" "),a("p",[a("strong",[v._v("解释型语言的效率较编译型语言来的更低一点")])]),v._v(" "),a("p",[v._v("但也不能一概而论，部分解释型语言的解释器通过在运行时动态优化代码，甚至能够使解释型语言的性能超过编译型语言")])]),v._v(" "),a("li",[a("p",[v._v("跨平台性：")]),v._v(" "),a("p",[v._v("编译型语言需要在运行前通过编译器把程序编译成机器语言，不同的操作系统计算机识别的二进制文件是不同的，所以编译型语言编写的程序进行移植后需要重新编译，")]),v._v(" "),a("p",[v._v("而解释型语言可以在运行时根据不同的操作系统选择不同的翻译方式。")]),v._v(" "),a("p",[a("strong",[v._v("编译型语言不如解释型语言跨平台性好")])])])]),v._v(" "),a("h2",{attrs:{id:"回到问题本身"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回到问题本身"}},[v._v("#")]),v._v(" 回到问题本身")]),v._v(" "),a("p",[v._v("在了解了编译型语言和解释型语言的区别后，我们回到最初的问题："),a("code",[v._v("javascript")]),v._v("到底是解释型语言还是编译型语言呢？")]),v._v(" "),a("p",[v._v("我们来分析一下"),a("code",[v._v("javascript")]),v._v("这门语言")]),v._v(" "),a("ul",[a("li",[a("code",[v._v("JavaScript")]),v._v("代码需要在机器（node 或者浏览器）的运行需要依赖JS引擎，这是解释型语言需要的，编译型语言程序在运行阶段并不需要工具可以直接运行。")]),v._v(" "),a("li",[a("code",[v._v("JavaScript")]),v._v("在经过JS引擎处理的过程中并没有生成其它可执行文件")])]),v._v(" "),a("p",[a("strong",[v._v("因此，我认为"),a("code",[v._v("JavaScript")]),v._v("仍然是一门解释型语言，而不是编译型语言。")])]),v._v(" "),a("h2",{attrs:{id:"最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[v._v("#")]),v._v(" 最后")]),v._v(" "),a("p",[v._v("在这个问题的最后，我查了一下MDN，发现对于"),a("code",[v._v("JavaScript")]),v._v("的描述发生了变化：")]),v._v(" "),a("blockquote",[a("p",[v._v("JavaScript (JS) 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web 页面的脚本语言而出名的，但是它也被用到了很多非浏览器环境中，例如Node.js、 Apache CouchDB和Adobe Acrobat。JavaScript是一种基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式和声明式（如函数式编程）风格。")])]),v._v(" "),a("p",[v._v("对于"),a("code",[v._v("JavaScript")]),v._v("而言，大部分情况下编译发生在代码执行前的几微秒（甚至更短！）的时间内，JavaScript 引擎用尽了各种办法（比如 JIT，可以延迟编译甚至实施重编译）来保证性能最佳。\n而这个编译过程又与大多数编译型语言的编译过程类似，需要经过分词/词法分析、解析/语法分析、代码生成的过程。现在已经很难区分一个语言是解释型还是编译型的了，解释和编译只是把高级语言翻译成机器语言的方式而已，没人说一种语言要么只能解释，要么只能编译")])])}),[],!1,null,null,null);_.default=r.exports}}]);